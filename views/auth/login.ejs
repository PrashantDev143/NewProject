<%- include('../partials/header') %>

<div class="min-vh-100 d-flex align-items-center justify-content-center bg-light">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-6 col-lg-5">
                <div class="card shadow-lg border-0">
                    <div class="card-body p-5">
                        <div class="text-center mb-4">
                            <i class="bi bi-shield-check text-primary" style="font-size: 3rem;"></i>
                            <h2 class="mt-3 fw-bold text-primary">E-BANDOBAST</h2>
                            <p class="text-muted">Police Deployment Tracking System</p>
                        </div>
                        
                        <div id="loginError" class="alert alert-danger d-none"></div>
                        
                        <button class="btn btn-danger btn-lg w-100 d-flex align-items-center justify-content-center gap-2" 
                                onclick="loginWithGoogle()" id="googleLoginBtn">
                            <i class="bi bi-google"></i>
                            Sign in with Google
                        </button>
                        
                        <div class="mt-4 text-center">
                            <small class="text-muted">
                                Authorized personnel only. Contact your system administrator for access.
                            </small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2.38.4/dist/umd/supabase.min.js"></script>
<script>
const supabase = supabaseClient.createClient(
    'YOUR_SUPABASE_URL',
    'YOUR_SUPABASE_ANON_KEY'
);

async function loginWithGoogle() {
    try {
        const btn = document.getElementById('googleLoginBtn');
        btn.disabled = true;
        btn.innerHTML = '<i class="spinner-border spinner-border-sm"></i> Signing in...';
        
        const { data, error } = await supabase.auth.signInWithOAuth({
            provider: 'google'
        });
        
        if (error) throw error;
        
        // Handle the OAuth callback
        const { data: session } = await supabase.auth.getSession();
        if (session?.session?.access_token) {
            await handleAuthSuccess(session.session.access_token);
        }
    } catch (error) {
        console.error('Login error:', error);
        showError('Login failed. Please try again.');
        resetButton();
    }
}

async function handleAuthSuccess(token) {
    try {
        const response = await fetch('/auth/google-login', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ token })
        });
        
        const result = await response.json();
        
        if (result.success) {
            window.location.href = result.redirectUrl;
        } else {
            throw new Error(result.error || 'Authentication failed');
        }
    } catch (error) {
        console.error('Auth error:', error);
        showError('Authentication failed. Please try again.');
        resetButton();
    }
}

function showError(message) {
    const errorDiv = document.getElementById('loginError');
    errorDiv.textContent = message;
    errorDiv.classList.remove('d-none');
}

function resetButton() {
    const btn = document.getElementById('googleLoginBtn');
    btn.disabled = false;
    btn.innerHTML = '<i class="bi bi-google"></i> Sign in with Google';
}

// Listen for auth state changes
supabase.auth.onAuthStateChange(async (event, session) => {
    if (event === 'SIGNED_IN' && session?.access_token) {
        await handleAuthSuccess(session.access_token);
    }
});
</script>

<%- include('../partials/footer') %>